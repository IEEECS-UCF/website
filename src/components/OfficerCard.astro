---
// src/components/OfficerCard.astro
import { urlFor } from "~/lib/sanityImageUrl";
import type { SanityImageSource } from "@sanity/image-url/lib/types/types";

export interface Props {
    officer: {
        name: string;
        position: string;
        headshot: SanityImageSource;
        year?: string;
        major?: string;
        quote?: string;
        links?: Array<{
            _key: string;
            title: string;
            url: string;
        }>;
    };
}

const { officer } = Astro.props;
const bgImage = officer.headshot
    ? urlFor(officer.headshot).width(800).height(800).auto("format").url()
    : null;
---

{/* Added transition, hover effect, increased padding, centered text */}
<div
    class="officer-card border border-gray-200 dark:border-gray-700 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 ease-in-out flex flex-col justify-end items-center text-center h-[48rem] relative overflow-hidden"
    style={bgImage
        ? `background-image: url('${bgImage}'); background-size: cover; background-position: center;`
        : ""}
>
    <!-- Subtle overlay/blur behind text with custom height -->
    <div
        class="absolute bottom-0 left-0 w-full z-10 pointer-events-none"
        style="height: 30%;"
    >
        <div class="w-full h-full bg-black/20 backdrop-blur-md rounded-t-xl">
        </div>
    </div>
    <div
        class="w-full flex flex-col items-center justify-end p-6 z-20 relative"
    >
        <h3
            class="text-2xl font-black text-ieee-blue dark:text-ieee-orange drop-shadow-lg mb-2"
        >
            {officer.name}
        </h3>
        <p
            class="text-lg text-gray-100 dark:text-gray-200 font-extrabold drop-shadow-lg mb-1"
        >
            {officer.position}
        </p>

        {
            (officer.year || officer.major) && (
                <p class="text-base text-gray-200 dark:text-gray-300 mt-1 drop-shadow-lg font-bold mb-1">
                    {officer.year}
                    {officer.year && officer.major ? " â€¢ " : ""}
                    {officer.major}
                </p>
            )
        }

        {
            officer.quote && (
                <blockquote class="text-gray-100 dark:text-gray-200 italic mt-3 text-base border-l-2 border-ieee-orange pl-3 drop-shadow-lg font-bold mb-2">
                    "{officer.quote}"
                </blockquote>
            )
        }

        {
            officer.links && officer.links.length > 0 && (
                <div class="mt-2 flex flex-wrap justify-center gap-2">
                    {officer.links.map((link) => (
                        <a
                            href={link.url}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-xs bg-blue-100 bg-opacity-80 text-ieee-blue hover:bg-blue-200 dark:bg-blue-900 dark:text-blue-200 dark:hover:bg-blue-800 rounded-full px-3 py-1 transition-colors duration-200 ease-in-out font-bold"
                        >
                            {link.title}
                        </a>
                    ))}
                </div>
            )
        }
    </div>
</div>
